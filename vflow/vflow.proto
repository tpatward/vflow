syntax = "proto2";
package FlowProto;

option go_package = "./vflow";

message FlowRecord {
	enum KeyType {
		IPv4 = 1;
		IPv6 = 2;
	}

	optional uint64 start_time = 1;
	optional uint64 end_time = 2;
	optional uint32 packet_count = 3;
	optional uint64 byte_count = 4;
	optional uint32 flow_id = 5;
	
	optional KeyType key = 6;
	optional bytes src_address = 7;
	optional uint32 src_prefix = 8;
	optional bytes dst_address = 9;
	optional uint32 dst_prefix = 10;
	optional bytes src_mac = 11;
	optional bytes dst_mac = 12;
	optional uint32 src_port = 13;
	optional uint32 dst_port = 14;
	optional uint32 proto = 15;
	optional uint32 tenant_id = 16;
	optional uint64 vrf = 17;
	optional uint32 vnid = 18;
}

message Header {
	optional uint32 Version = 1;
	optional uint32 Count = 2;
	optional uint32 SysUpTime = 3;
	optional uint32 UNIXSecs = 4;
	optional uint32 SeqNum = 5;
	optional uint32 SrcId = 6;
}	

// A flow message is defined as a header followed by a bunch of flow records
message FlowMessage {
	optional Header headers = 1;

	repeated FlowRecord flow_records = 2;
	
}
